/*
 * Aurinko.io API
 * ## Introduction The Aurinko API is a unified API platform allowing developers to quickly build integrations with many mailbox providers and services like Google, Office 365, Outlook.com, MS Exchange, IMAP. The unified API abstracts away differences between many email, calendar, contact, task APIs to make it easy to connect and sync the mailbox data.  The Aurinko API's focus is convenient and reliable data synchronization for all supported data categories (email, calendar, contacts, tasks) so the API provides methods to receive changes/deltas and be notified of the changes (through webhooks) in a unified manner. The API's sync/deltas model should allow developers to build reliable event based solutions easily.  The Aurinko API is built on HTTP. Our API is RESTful. It has predictable resource URLs. It returns HTTP response codes to indicate errors. It also accepts and returns JSON in the HTTP body.  ## API Authentication When you [sign up for an account](https://app.aurinko.io/#/signUp), you are given a Client Id and Secret for every application that you create. You use those to go through OAuth flows that allow you to start syncing remote account data through Aurinko. An account OAuth flow can be started with just the Client Id and the Client Secret will be required to obtain an account access token in the \"authorization code\" flow (\"implicit grant\" flow does is secured by the \"trusted domains\" setting).  Aurinko offers two forms of authentication:  - `Basic <Client Id, Client Secret>` - used for authentication flows and administrative requests made from the server side. - `Bearer <Account Access Token>` - used for working with an account data. - `Api Key in Cookie` - for in-browser apps that use Aurinko as their backend API with user sessions. - `Api Key in Header (X-Aurinko-Session)` - for server side apps that need user sessions  Never share your client secret or access token. Keep them guarded and secure.  ## Getting Started Guide If you have a use case you would like to implement, please consult us for feedback on the best API operations for the task.  [Click here to visit our API Guides](https://docs.aurinko.io/ctg-getting-started/getting-started). 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@aurinko.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.aurinko.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.aurinko.client.model.EmailAddress;
import io.aurinko.client.model.EmailAttachment;
import io.aurinko.client.model.EmailHeader;
import io.aurinko.client.model.Sensitivity;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import io.aurinko.client.ApiClient;
/**
 * EmailMessage
 */
@JsonPropertyOrder({
  EmailMessage.JSON_PROPERTY_ID,
  EmailMessage.JSON_PROPERTY_THREAD_ID,
  EmailMessage.JSON_PROPERTY_CREATED_TIME,
  EmailMessage.JSON_PROPERTY_LAST_MODIFIED_TIME,
  EmailMessage.JSON_PROPERTY_SENT_AT,
  EmailMessage.JSON_PROPERTY_RECEIVED_AT,
  EmailMessage.JSON_PROPERTY_INTERNET_MESSAGE_ID,
  EmailMessage.JSON_PROPERTY_SUBJECT,
  EmailMessage.JSON_PROPERTY_SYS_LABELS,
  EmailMessage.JSON_PROPERTY_KEYWORDS,
  EmailMessage.JSON_PROPERTY_SYS_CLASSIFICATIONS,
  EmailMessage.JSON_PROPERTY_SENSITIVITY,
  EmailMessage.JSON_PROPERTY_MEETING_MESSAGE_METHOD,
  EmailMessage.JSON_PROPERTY_FROM,
  EmailMessage.JSON_PROPERTY_TO,
  EmailMessage.JSON_PROPERTY_CC,
  EmailMessage.JSON_PROPERTY_BCC,
  EmailMessage.JSON_PROPERTY_REPLY_TO,
  EmailMessage.JSON_PROPERTY_HAS_ATTACHMENTS,
  EmailMessage.JSON_PROPERTY_BODY,
  EmailMessage.JSON_PROPERTY_BODY_SNIPPET,
  EmailMessage.JSON_PROPERTY_ATTACHMENTS,
  EmailMessage.JSON_PROPERTY_IN_REPLY_TO,
  EmailMessage.JSON_PROPERTY_REFERENCES,
  EmailMessage.JSON_PROPERTY_THREAD_INDEX,
  EmailMessage.JSON_PROPERTY_INTERNET_HEADERS,
  EmailMessage.JSON_PROPERTY_NATIVE_PROPERTIES,
  EmailMessage.JSON_PROPERTY_FOLDER_ID,
  EmailMessage.JSON_PROPERTY_WEB_LINK,
  EmailMessage.JSON_PROPERTY_OMITTED
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class EmailMessage {
  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nullable
  private String id;

  public static final String JSON_PROPERTY_THREAD_ID = "threadId";
  @javax.annotation.Nullable
  private String threadId;

  public static final String JSON_PROPERTY_CREATED_TIME = "createdTime";
  @javax.annotation.Nullable
  private OffsetDateTime createdTime;

  public static final String JSON_PROPERTY_LAST_MODIFIED_TIME = "lastModifiedTime";
  @javax.annotation.Nullable
  private OffsetDateTime lastModifiedTime;

  public static final String JSON_PROPERTY_SENT_AT = "sentAt";
  @javax.annotation.Nullable
  private OffsetDateTime sentAt;

  public static final String JSON_PROPERTY_RECEIVED_AT = "receivedAt";
  @javax.annotation.Nullable
  private OffsetDateTime receivedAt;

  public static final String JSON_PROPERTY_INTERNET_MESSAGE_ID = "internetMessageId";
  @javax.annotation.Nullable
  private String internetMessageId;

  public static final String JSON_PROPERTY_SUBJECT = "subject";
  @javax.annotation.Nullable
  private String subject;

  /**
   * Gets or Sets sysLabels
   */
  public enum SysLabelsEnum {
    JUNK(String.valueOf("junk")),
    
    TRASH(String.valueOf("trash")),
    
    SENT(String.valueOf("sent")),
    
    INBOX(String.valueOf("inbox")),
    
    UNREAD(String.valueOf("unread")),
    
    FLAGGED(String.valueOf("flagged")),
    
    IMPORTANT(String.valueOf("important")),
    
    DRAFT(String.valueOf("draft")),
    
    UNKNOWN_DEFAULT_OPEN_API(String.valueOf("unknown_default_open_api"));

    private String value;

    SysLabelsEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SysLabelsEnum fromValue(String value) {
      for (SysLabelsEnum b : SysLabelsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  public static final String JSON_PROPERTY_SYS_LABELS = "sysLabels";
  @javax.annotation.Nullable
  private List<SysLabelsEnum> sysLabels = new ArrayList<>();

  public static final String JSON_PROPERTY_KEYWORDS = "keywords";
  @javax.annotation.Nullable
  private List<String> keywords = new ArrayList<>();

  /**
   * Gets or Sets sysClassifications
   */
  public enum SysClassificationsEnum {
    PERSONAL(String.valueOf("personal")),
    
    SOCIAL(String.valueOf("social")),
    
    PROMOTIONS(String.valueOf("promotions")),
    
    UPDATES(String.valueOf("updates")),
    
    FORUMS(String.valueOf("forums")),
    
    UNKNOWN_DEFAULT_OPEN_API(String.valueOf("unknown_default_open_api"));

    private String value;

    SysClassificationsEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SysClassificationsEnum fromValue(String value) {
      for (SysClassificationsEnum b : SysClassificationsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  public static final String JSON_PROPERTY_SYS_CLASSIFICATIONS = "sysClassifications";
  @javax.annotation.Nullable
  private List<SysClassificationsEnum> sysClassifications = new ArrayList<>();

  public static final String JSON_PROPERTY_SENSITIVITY = "sensitivity";
  @javax.annotation.Nullable
  private Sensitivity sensitivity;

  /**
   * Gets or Sets meetingMessageMethod
   */
  public enum MeetingMessageMethodEnum {
    REQUEST(String.valueOf("request")),
    
    REPLY(String.valueOf("reply")),
    
    CANCEL(String.valueOf("cancel")),
    
    COUNTER(String.valueOf("counter")),
    
    OTHER(String.valueOf("other")),
    
    UNKNOWN_DEFAULT_OPEN_API(String.valueOf("unknown_default_open_api"));

    private String value;

    MeetingMessageMethodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MeetingMessageMethodEnum fromValue(String value) {
      for (MeetingMessageMethodEnum b : MeetingMessageMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  public static final String JSON_PROPERTY_MEETING_MESSAGE_METHOD = "meetingMessageMethod";
  @javax.annotation.Nullable
  private MeetingMessageMethodEnum meetingMessageMethod;

  public static final String JSON_PROPERTY_FROM = "from";
  @javax.annotation.Nullable
  private EmailAddress from;

  public static final String JSON_PROPERTY_TO = "to";
  @javax.annotation.Nullable
  private List<EmailAddress> to = new ArrayList<>();

  public static final String JSON_PROPERTY_CC = "cc";
  @javax.annotation.Nullable
  private List<EmailAddress> cc = new ArrayList<>();

  public static final String JSON_PROPERTY_BCC = "bcc";
  @javax.annotation.Nullable
  private List<EmailAddress> bcc = new ArrayList<>();

  public static final String JSON_PROPERTY_REPLY_TO = "replyTo";
  @javax.annotation.Nullable
  private List<EmailAddress> replyTo = new ArrayList<>();

  public static final String JSON_PROPERTY_HAS_ATTACHMENTS = "hasAttachments";
  @javax.annotation.Nullable
  private Boolean hasAttachments;

  public static final String JSON_PROPERTY_BODY = "body";
  @javax.annotation.Nullable
  private String body;

  public static final String JSON_PROPERTY_BODY_SNIPPET = "bodySnippet";
  @javax.annotation.Nullable
  private String bodySnippet;

  public static final String JSON_PROPERTY_ATTACHMENTS = "attachments";
  @javax.annotation.Nullable
  private List<EmailAttachment> attachments = new ArrayList<>();

  public static final String JSON_PROPERTY_IN_REPLY_TO = "inReplyTo";
  @javax.annotation.Nullable
  private String inReplyTo;

  public static final String JSON_PROPERTY_REFERENCES = "references";
  @javax.annotation.Nullable
  private String references;

  public static final String JSON_PROPERTY_THREAD_INDEX = "threadIndex";
  @javax.annotation.Nullable
  private String threadIndex;

  public static final String JSON_PROPERTY_INTERNET_HEADERS = "internetHeaders";
  @javax.annotation.Nullable
  private List<EmailHeader> internetHeaders = new ArrayList<>();

  public static final String JSON_PROPERTY_NATIVE_PROPERTIES = "nativeProperties";
  @javax.annotation.Nullable
  private Map<String, String> nativeProperties = new HashMap<>();

  public static final String JSON_PROPERTY_FOLDER_ID = "folderId";
  @javax.annotation.Nullable
  private String folderId;

  public static final String JSON_PROPERTY_WEB_LINK = "webLink";
  @javax.annotation.Nullable
  private String webLink;

  /**
   * Gets or Sets omitted
   */
  public enum OmittedEnum {
    THREAD_ID(String.valueOf("threadId")),
    
    BODY(String.valueOf("body")),
    
    ATTACHMENTS(String.valueOf("attachments")),
    
    RECIPIENTS(String.valueOf("recipients")),
    
    INTERNET_HEADERS(String.valueOf("internetHeaders")),
    
    UNKNOWN_DEFAULT_OPEN_API(String.valueOf("unknown_default_open_api"));

    private String value;

    OmittedEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OmittedEnum fromValue(String value) {
      for (OmittedEnum b : OmittedEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  public static final String JSON_PROPERTY_OMITTED = "omitted";
  @javax.annotation.Nullable
  private List<OmittedEnum> omitted = new ArrayList<>();

  public EmailMessage() { 
  }

  @JsonCreator
  public EmailMessage(
    @JsonProperty(JSON_PROPERTY_ID) String id, 
    @JsonProperty(JSON_PROPERTY_THREAD_ID) String threadId, 
    @JsonProperty(JSON_PROPERTY_CREATED_TIME) OffsetDateTime createdTime, 
    @JsonProperty(JSON_PROPERTY_LAST_MODIFIED_TIME) OffsetDateTime lastModifiedTime, 
    @JsonProperty(JSON_PROPERTY_SENT_AT) OffsetDateTime sentAt, 
    @JsonProperty(JSON_PROPERTY_RECEIVED_AT) OffsetDateTime receivedAt, 
    @JsonProperty(JSON_PROPERTY_INTERNET_MESSAGE_ID) String internetMessageId, 
    @JsonProperty(JSON_PROPERTY_SUBJECT) String subject, 
    @JsonProperty(JSON_PROPERTY_SYS_LABELS) List<SysLabelsEnum> sysLabels, 
    @JsonProperty(JSON_PROPERTY_SYS_CLASSIFICATIONS) List<SysClassificationsEnum> sysClassifications, 
    @JsonProperty(JSON_PROPERTY_HAS_ATTACHMENTS) Boolean hasAttachments, 
    @JsonProperty(JSON_PROPERTY_BODY) String body, 
    @JsonProperty(JSON_PROPERTY_BODY_SNIPPET) String bodySnippet, 
    @JsonProperty(JSON_PROPERTY_IN_REPLY_TO) String inReplyTo, 
    @JsonProperty(JSON_PROPERTY_REFERENCES) String references, 
    @JsonProperty(JSON_PROPERTY_THREAD_INDEX) String threadIndex, 
    @JsonProperty(JSON_PROPERTY_FOLDER_ID) String folderId, 
    @JsonProperty(JSON_PROPERTY_WEB_LINK) String webLink, 
    @JsonProperty(JSON_PROPERTY_OMITTED) List<OmittedEnum> omitted
  ) {
  this();
    this.id = id;
    this.threadId = threadId;
    this.createdTime = createdTime;
    this.lastModifiedTime = lastModifiedTime;
    this.sentAt = sentAt;
    this.receivedAt = receivedAt;
    this.internetMessageId = internetMessageId;
    this.subject = subject;
    this.sysLabels = sysLabels;
    this.sysClassifications = sysClassifications;
    this.hasAttachments = hasAttachments;
    this.body = body;
    this.bodySnippet = bodySnippet;
    this.inReplyTo = inReplyTo;
    this.references = references;
    this.threadIndex = threadIndex;
    this.folderId = folderId;
    this.webLink = webLink;
    this.omitted = omitted;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getId() {
    return id;
  }




  /**
   * Get threadId
   * @return threadId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_THREAD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getThreadId() {
    return threadId;
  }




  /**
   * Get createdTime
   * @return createdTime
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getCreatedTime() {
    return createdTime;
  }




  /**
   * Get lastModifiedTime
   * @return lastModifiedTime
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_MODIFIED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }




  /**
   * Get sentAt
   * @return sentAt
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SENT_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getSentAt() {
    return sentAt;
  }




  /**
   * Get receivedAt
   * @return receivedAt
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECEIVED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getReceivedAt() {
    return receivedAt;
  }




  /**
   * Get internetMessageId
   * @return internetMessageId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTERNET_MESSAGE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getInternetMessageId() {
    return internetMessageId;
  }




  /**
   * Get subject
   * @return subject
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSubject() {
    return subject;
  }




  /**
   * Get sysLabels
   * @return sysLabels
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SYS_LABELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<SysLabelsEnum> getSysLabels() {
    return sysLabels;
  }




  public EmailMessage keywords(@javax.annotation.Nullable List<String> keywords) {
    this.keywords = keywords;
    return this;
  }

  public EmailMessage addKeywordsItem(String keywordsItem) {
    if (this.keywords == null) {
      this.keywords = new ArrayList<>();
    }
    this.keywords.add(keywordsItem);
    return this;
  }

  /**
   * Get keywords
   * @return keywords
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KEYWORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getKeywords() {
    return keywords;
  }


  @JsonProperty(JSON_PROPERTY_KEYWORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKeywords(@javax.annotation.Nullable List<String> keywords) {
    this.keywords = keywords;
  }


  /**
   * Get sysClassifications
   * @return sysClassifications
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SYS_CLASSIFICATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<SysClassificationsEnum> getSysClassifications() {
    return sysClassifications;
  }




  public EmailMessage sensitivity(@javax.annotation.Nullable Sensitivity sensitivity) {
    this.sensitivity = sensitivity;
    return this;
  }

  /**
   * Get sensitivity
   * @return sensitivity
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SENSITIVITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Sensitivity getSensitivity() {
    return sensitivity;
  }


  @JsonProperty(JSON_PROPERTY_SENSITIVITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSensitivity(@javax.annotation.Nullable Sensitivity sensitivity) {
    this.sensitivity = sensitivity;
  }


  public EmailMessage meetingMessageMethod(@javax.annotation.Nullable MeetingMessageMethodEnum meetingMessageMethod) {
    this.meetingMessageMethod = meetingMessageMethod;
    return this;
  }

  /**
   * Get meetingMessageMethod
   * @return meetingMessageMethod
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEETING_MESSAGE_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public MeetingMessageMethodEnum getMeetingMessageMethod() {
    return meetingMessageMethod;
  }


  @JsonProperty(JSON_PROPERTY_MEETING_MESSAGE_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMeetingMessageMethod(@javax.annotation.Nullable MeetingMessageMethodEnum meetingMessageMethod) {
    this.meetingMessageMethod = meetingMessageMethod;
  }


  public EmailMessage from(@javax.annotation.Nullable EmailAddress from) {
    this.from = from;
    return this;
  }

  /**
   * Get from
   * @return from
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public EmailAddress getFrom() {
    return from;
  }


  @JsonProperty(JSON_PROPERTY_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFrom(@javax.annotation.Nullable EmailAddress from) {
    this.from = from;
  }


  public EmailMessage to(@javax.annotation.Nullable List<EmailAddress> to) {
    this.to = to;
    return this;
  }

  public EmailMessage addToItem(EmailAddress toItem) {
    if (this.to == null) {
      this.to = new ArrayList<>();
    }
    this.to.add(toItem);
    return this;
  }

  /**
   * Get to
   * @return to
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<EmailAddress> getTo() {
    return to;
  }


  @JsonProperty(JSON_PROPERTY_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTo(@javax.annotation.Nullable List<EmailAddress> to) {
    this.to = to;
  }


  public EmailMessage cc(@javax.annotation.Nullable List<EmailAddress> cc) {
    this.cc = cc;
    return this;
  }

  public EmailMessage addCcItem(EmailAddress ccItem) {
    if (this.cc == null) {
      this.cc = new ArrayList<>();
    }
    this.cc.add(ccItem);
    return this;
  }

  /**
   * Get cc
   * @return cc
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<EmailAddress> getCc() {
    return cc;
  }


  @JsonProperty(JSON_PROPERTY_CC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCc(@javax.annotation.Nullable List<EmailAddress> cc) {
    this.cc = cc;
  }


  public EmailMessage bcc(@javax.annotation.Nullable List<EmailAddress> bcc) {
    this.bcc = bcc;
    return this;
  }

  public EmailMessage addBccItem(EmailAddress bccItem) {
    if (this.bcc == null) {
      this.bcc = new ArrayList<>();
    }
    this.bcc.add(bccItem);
    return this;
  }

  /**
   * Get bcc
   * @return bcc
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BCC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<EmailAddress> getBcc() {
    return bcc;
  }


  @JsonProperty(JSON_PROPERTY_BCC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBcc(@javax.annotation.Nullable List<EmailAddress> bcc) {
    this.bcc = bcc;
  }


  public EmailMessage replyTo(@javax.annotation.Nullable List<EmailAddress> replyTo) {
    this.replyTo = replyTo;
    return this;
  }

  public EmailMessage addReplyToItem(EmailAddress replyToItem) {
    if (this.replyTo == null) {
      this.replyTo = new ArrayList<>();
    }
    this.replyTo.add(replyToItem);
    return this;
  }

  /**
   * Get replyTo
   * @return replyTo
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPLY_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<EmailAddress> getReplyTo() {
    return replyTo;
  }


  @JsonProperty(JSON_PROPERTY_REPLY_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReplyTo(@javax.annotation.Nullable List<EmailAddress> replyTo) {
    this.replyTo = replyTo;
  }


  /**
   * Get hasAttachments
   * @return hasAttachments
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HAS_ATTACHMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getHasAttachments() {
    return hasAttachments;
  }




  /**
   * Get body
   * @return body
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BODY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getBody() {
    return body;
  }




  /**
   * Get bodySnippet
   * @return bodySnippet
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BODY_SNIPPET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getBodySnippet() {
    return bodySnippet;
  }




  public EmailMessage attachments(@javax.annotation.Nullable List<EmailAttachment> attachments) {
    this.attachments = attachments;
    return this;
  }

  public EmailMessage addAttachmentsItem(EmailAttachment attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

  /**
   * Get attachments
   * @return attachments
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ATTACHMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<EmailAttachment> getAttachments() {
    return attachments;
  }


  @JsonProperty(JSON_PROPERTY_ATTACHMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttachments(@javax.annotation.Nullable List<EmailAttachment> attachments) {
    this.attachments = attachments;
  }


  /**
   * Get inReplyTo
   * @return inReplyTo
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IN_REPLY_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getInReplyTo() {
    return inReplyTo;
  }




  /**
   * Get references
   * @return references
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFERENCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getReferences() {
    return references;
  }




  /**
   * Get threadIndex
   * @return threadIndex
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_THREAD_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getThreadIndex() {
    return threadIndex;
  }




  public EmailMessage internetHeaders(@javax.annotation.Nullable List<EmailHeader> internetHeaders) {
    this.internetHeaders = internetHeaders;
    return this;
  }

  public EmailMessage addInternetHeadersItem(EmailHeader internetHeadersItem) {
    if (this.internetHeaders == null) {
      this.internetHeaders = new ArrayList<>();
    }
    this.internetHeaders.add(internetHeadersItem);
    return this;
  }

  /**
   * Get internetHeaders
   * @return internetHeaders
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTERNET_HEADERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<EmailHeader> getInternetHeaders() {
    return internetHeaders;
  }


  @JsonProperty(JSON_PROPERTY_INTERNET_HEADERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInternetHeaders(@javax.annotation.Nullable List<EmailHeader> internetHeaders) {
    this.internetHeaders = internetHeaders;
  }


  public EmailMessage nativeProperties(@javax.annotation.Nullable Map<String, String> nativeProperties) {
    this.nativeProperties = nativeProperties;
    return this;
  }

  public EmailMessage putNativePropertiesItem(String key, String nativePropertiesItem) {
    if (this.nativeProperties == null) {
      this.nativeProperties = new HashMap<>();
    }
    this.nativeProperties.put(key, nativePropertiesItem);
    return this;
  }

  /**
   * Get nativeProperties
   * @return nativeProperties
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NATIVE_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Map<String, String> getNativeProperties() {
    return nativeProperties;
  }


  @JsonProperty(JSON_PROPERTY_NATIVE_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNativeProperties(@javax.annotation.Nullable Map<String, String> nativeProperties) {
    this.nativeProperties = nativeProperties;
  }


  /**
   * Get folderId
   * @return folderId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FOLDER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getFolderId() {
    return folderId;
  }




  /**
   * Get webLink
   * @return webLink
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WEB_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getWebLink() {
    return webLink;
  }




  /**
   * Get omitted
   * @return omitted
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OMITTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<OmittedEnum> getOmitted() {
    return omitted;
  }




  /**
   * Return true if this EmailMessage object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailMessage emailMessage = (EmailMessage) o;
    return Objects.equals(this.id, emailMessage.id) &&
        Objects.equals(this.threadId, emailMessage.threadId) &&
        Objects.equals(this.createdTime, emailMessage.createdTime) &&
        Objects.equals(this.lastModifiedTime, emailMessage.lastModifiedTime) &&
        Objects.equals(this.sentAt, emailMessage.sentAt) &&
        Objects.equals(this.receivedAt, emailMessage.receivedAt) &&
        Objects.equals(this.internetMessageId, emailMessage.internetMessageId) &&
        Objects.equals(this.subject, emailMessage.subject) &&
        Objects.equals(this.sysLabels, emailMessage.sysLabels) &&
        Objects.equals(this.keywords, emailMessage.keywords) &&
        Objects.equals(this.sysClassifications, emailMessage.sysClassifications) &&
        Objects.equals(this.sensitivity, emailMessage.sensitivity) &&
        Objects.equals(this.meetingMessageMethod, emailMessage.meetingMessageMethod) &&
        Objects.equals(this.from, emailMessage.from) &&
        Objects.equals(this.to, emailMessage.to) &&
        Objects.equals(this.cc, emailMessage.cc) &&
        Objects.equals(this.bcc, emailMessage.bcc) &&
        Objects.equals(this.replyTo, emailMessage.replyTo) &&
        Objects.equals(this.hasAttachments, emailMessage.hasAttachments) &&
        Objects.equals(this.body, emailMessage.body) &&
        Objects.equals(this.bodySnippet, emailMessage.bodySnippet) &&
        Objects.equals(this.attachments, emailMessage.attachments) &&
        Objects.equals(this.inReplyTo, emailMessage.inReplyTo) &&
        Objects.equals(this.references, emailMessage.references) &&
        Objects.equals(this.threadIndex, emailMessage.threadIndex) &&
        Objects.equals(this.internetHeaders, emailMessage.internetHeaders) &&
        Objects.equals(this.nativeProperties, emailMessage.nativeProperties) &&
        Objects.equals(this.folderId, emailMessage.folderId) &&
        Objects.equals(this.webLink, emailMessage.webLink) &&
        Objects.equals(this.omitted, emailMessage.omitted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, threadId, createdTime, lastModifiedTime, sentAt, receivedAt, internetMessageId, subject, sysLabels, keywords, sysClassifications, sensitivity, meetingMessageMethod, from, to, cc, bcc, replyTo, hasAttachments, body, bodySnippet, attachments, inReplyTo, references, threadIndex, internetHeaders, nativeProperties, folderId, webLink, omitted);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailMessage {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    threadId: ").append(toIndentedString(threadId)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    sentAt: ").append(toIndentedString(sentAt)).append("\n");
    sb.append("    receivedAt: ").append(toIndentedString(receivedAt)).append("\n");
    sb.append("    internetMessageId: ").append(toIndentedString(internetMessageId)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    sysLabels: ").append(toIndentedString(sysLabels)).append("\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("    sysClassifications: ").append(toIndentedString(sysClassifications)).append("\n");
    sb.append("    sensitivity: ").append(toIndentedString(sensitivity)).append("\n");
    sb.append("    meetingMessageMethod: ").append(toIndentedString(meetingMessageMethod)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    cc: ").append(toIndentedString(cc)).append("\n");
    sb.append("    bcc: ").append(toIndentedString(bcc)).append("\n");
    sb.append("    replyTo: ").append(toIndentedString(replyTo)).append("\n");
    sb.append("    hasAttachments: ").append(toIndentedString(hasAttachments)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    bodySnippet: ").append(toIndentedString(bodySnippet)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    inReplyTo: ").append(toIndentedString(inReplyTo)).append("\n");
    sb.append("    references: ").append(toIndentedString(references)).append("\n");
    sb.append("    threadIndex: ").append(toIndentedString(threadIndex)).append("\n");
    sb.append("    internetHeaders: ").append(toIndentedString(internetHeaders)).append("\n");
    sb.append("    nativeProperties: ").append(toIndentedString(nativeProperties)).append("\n");
    sb.append("    folderId: ").append(toIndentedString(folderId)).append("\n");
    sb.append("    webLink: ").append(toIndentedString(webLink)).append("\n");
    sb.append("    omitted: ").append(toIndentedString(omitted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `threadId` to the URL query string
    if (getThreadId() != null) {
      joiner.add(String.format("%sthreadId%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getThreadId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `createdTime` to the URL query string
    if (getCreatedTime() != null) {
      joiner.add(String.format("%screatedTime%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getCreatedTime()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `lastModifiedTime` to the URL query string
    if (getLastModifiedTime() != null) {
      joiner.add(String.format("%slastModifiedTime%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getLastModifiedTime()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `sentAt` to the URL query string
    if (getSentAt() != null) {
      joiner.add(String.format("%ssentAt%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getSentAt()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `receivedAt` to the URL query string
    if (getReceivedAt() != null) {
      joiner.add(String.format("%sreceivedAt%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getReceivedAt()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `internetMessageId` to the URL query string
    if (getInternetMessageId() != null) {
      joiner.add(String.format("%sinternetMessageId%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getInternetMessageId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `subject` to the URL query string
    if (getSubject() != null) {
      joiner.add(String.format("%ssubject%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getSubject()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `sysLabels` to the URL query string
    if (getSysLabels() != null) {
      for (int i = 0; i < getSysLabels().size(); i++) {
        joiner.add(String.format("%ssysLabels%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(ApiClient.valueToString(getSysLabels().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `keywords` to the URL query string
    if (getKeywords() != null) {
      for (int i = 0; i < getKeywords().size(); i++) {
        joiner.add(String.format("%skeywords%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(ApiClient.valueToString(getKeywords().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `sysClassifications` to the URL query string
    if (getSysClassifications() != null) {
      for (int i = 0; i < getSysClassifications().size(); i++) {
        joiner.add(String.format("%ssysClassifications%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(ApiClient.valueToString(getSysClassifications().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `sensitivity` to the URL query string
    if (getSensitivity() != null) {
      joiner.add(String.format("%ssensitivity%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getSensitivity()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `meetingMessageMethod` to the URL query string
    if (getMeetingMessageMethod() != null) {
      joiner.add(String.format("%smeetingMessageMethod%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getMeetingMessageMethod()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `from` to the URL query string
    if (getFrom() != null) {
      joiner.add(getFrom().toUrlQueryString(prefix + "from" + suffix));
    }

    // add `to` to the URL query string
    if (getTo() != null) {
      for (int i = 0; i < getTo().size(); i++) {
        if (getTo().get(i) != null) {
          joiner.add(getTo().get(i).toUrlQueryString(String.format("%sto%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `cc` to the URL query string
    if (getCc() != null) {
      for (int i = 0; i < getCc().size(); i++) {
        if (getCc().get(i) != null) {
          joiner.add(getCc().get(i).toUrlQueryString(String.format("%scc%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `bcc` to the URL query string
    if (getBcc() != null) {
      for (int i = 0; i < getBcc().size(); i++) {
        if (getBcc().get(i) != null) {
          joiner.add(getBcc().get(i).toUrlQueryString(String.format("%sbcc%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `replyTo` to the URL query string
    if (getReplyTo() != null) {
      for (int i = 0; i < getReplyTo().size(); i++) {
        if (getReplyTo().get(i) != null) {
          joiner.add(getReplyTo().get(i).toUrlQueryString(String.format("%sreplyTo%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `hasAttachments` to the URL query string
    if (getHasAttachments() != null) {
      joiner.add(String.format("%shasAttachments%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getHasAttachments()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `body` to the URL query string
    if (getBody() != null) {
      joiner.add(String.format("%sbody%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getBody()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `bodySnippet` to the URL query string
    if (getBodySnippet() != null) {
      joiner.add(String.format("%sbodySnippet%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getBodySnippet()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `attachments` to the URL query string
    if (getAttachments() != null) {
      for (int i = 0; i < getAttachments().size(); i++) {
        if (getAttachments().get(i) != null) {
          joiner.add(getAttachments().get(i).toUrlQueryString(String.format("%sattachments%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `inReplyTo` to the URL query string
    if (getInReplyTo() != null) {
      joiner.add(String.format("%sinReplyTo%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getInReplyTo()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `references` to the URL query string
    if (getReferences() != null) {
      joiner.add(String.format("%sreferences%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getReferences()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `threadIndex` to the URL query string
    if (getThreadIndex() != null) {
      joiner.add(String.format("%sthreadIndex%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getThreadIndex()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `internetHeaders` to the URL query string
    if (getInternetHeaders() != null) {
      for (int i = 0; i < getInternetHeaders().size(); i++) {
        if (getInternetHeaders().get(i) != null) {
          joiner.add(getInternetHeaders().get(i).toUrlQueryString(String.format("%sinternetHeaders%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `nativeProperties` to the URL query string
    if (getNativeProperties() != null) {
      for (String _key : getNativeProperties().keySet()) {
        joiner.add(String.format("%snativeProperties%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, _key, containerSuffix),
            getNativeProperties().get(_key), URLEncoder.encode(ApiClient.valueToString(getNativeProperties().get(_key)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `folderId` to the URL query string
    if (getFolderId() != null) {
      joiner.add(String.format("%sfolderId%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getFolderId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `webLink` to the URL query string
    if (getWebLink() != null) {
      joiner.add(String.format("%swebLink%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getWebLink()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `omitted` to the URL query string
    if (getOmitted() != null) {
      for (int i = 0; i < getOmitted().size(); i++) {
        joiner.add(String.format("%somitted%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(ApiClient.valueToString(getOmitted().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    return joiner.toString();
  }
}

